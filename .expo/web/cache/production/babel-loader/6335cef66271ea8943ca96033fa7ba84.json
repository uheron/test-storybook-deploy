{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var clipboardAvailable;var Clipboard=function(){function Clipboard(){(0,_classCallCheck2.default)(this,Clipboard);}(0,_createClass2.default)(Clipboard,null,[{key:\"isAvailable\",value:function isAvailable(){if(clipboardAvailable===undefined){clipboardAvailable=typeof document.queryCommandSupported==='function'&&document.queryCommandSupported('copy');}return clipboardAvailable;}},{key:\"getString\",value:function getString(){return Promise.resolve('');}},{key:\"setString\",value:function setString(text){var success=false;var body=document.body;if(body){var node=document.createElement('span');node.textContent=text;node.style.opacity='0';node.style.position='absolute';node.style.whiteSpace='pre-wrap';node.style.userSelect='auto';body.appendChild(node);var selection=window.getSelection();selection.removeAllRanges();var range=document.createRange();range.selectNodeContents(node);selection.addRange(range);try{document.execCommand('copy');success=true;}catch(e){}selection.removeAllRanges();body.removeChild(node);}return success;}}]);return Clipboard;}();exports.default=Clipboard;","map":{"version":3,"sources":["/Users/uheron/IH/storybookFinalTest/node_modules/react-native-web/dist/exports/Clipboard/index.js"],"names":["clipboardAvailable","Clipboard","undefined","document","queryCommandSupported","Promise","resolve","text","success","body","node","createElement","textContent","style","opacity","position","whiteSpace","userSelect","appendChild","selection","window","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","e","removeChild"],"mappings":"yVASA,GAAIA,CAAAA,kBAAJ,C,GACqBC,CAAAA,S,kJACnB,sBAAqB,CACnB,GAAID,kBAAkB,GAAKE,SAA3B,CAAsC,CACpCF,kBAAkB,CAAG,MAAOG,CAAAA,QAAQ,CAACC,qBAAhB,GAA0C,UAA1C,EAAwDD,QAAQ,CAACC,qBAAT,CAA+B,MAA/B,CAA7E,CACD,CAED,MAAOJ,CAAAA,kBAAP,CACD,C,yBAED,oBAAmB,CACjB,MAAOK,CAAAA,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP,CACD,C,yBAED,mBAAiBC,IAAjB,CAAuB,CACrB,GAAIC,CAAAA,OAAO,CAAG,KAAd,CACA,GAAIC,CAAAA,IAAI,CAAGN,QAAQ,CAACM,IAApB,CAEA,GAAIA,IAAJ,CAAU,CAER,GAAIC,CAAAA,IAAI,CAAGP,QAAQ,CAACQ,aAAT,CAAuB,MAAvB,CAAX,CACAD,IAAI,CAACE,WAAL,CAAmBL,IAAnB,CACAG,IAAI,CAACG,KAAL,CAAWC,OAAX,CAAqB,GAArB,CACAJ,IAAI,CAACG,KAAL,CAAWE,QAAX,CAAsB,UAAtB,CACAL,IAAI,CAACG,KAAL,CAAWG,UAAX,CAAwB,UAAxB,CACAN,IAAI,CAACG,KAAL,CAAWI,UAAX,CAAwB,MAAxB,CACAR,IAAI,CAACS,WAAL,CAAiBR,IAAjB,EAEA,GAAIS,CAAAA,SAAS,CAAGC,MAAM,CAACC,YAAP,EAAhB,CACAF,SAAS,CAACG,eAAV,GACA,GAAIC,CAAAA,KAAK,CAAGpB,QAAQ,CAACqB,WAAT,EAAZ,CACAD,KAAK,CAACE,kBAAN,CAAyBf,IAAzB,EACAS,SAAS,CAACO,QAAV,CAAmBH,KAAnB,EAEA,GAAI,CACFpB,QAAQ,CAACwB,WAAT,CAAqB,MAArB,EACAnB,OAAO,CAAG,IAAV,CACD,CAAC,MAAOoB,CAAP,CAAU,CAAE,CAGdT,SAAS,CAACG,eAAV,GACAb,IAAI,CAACoB,WAAL,CAAiBnB,IAAjB,EACD,CAED,MAAOF,CAAAA,OAAP,CACD,C","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar clipboardAvailable;\nexport default class Clipboard {\n  static isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n\n    return clipboardAvailable;\n  }\n\n  static getString() {\n    return Promise.resolve('');\n  }\n\n  static setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      // add the text to a hidden node\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      node.style.userSelect = 'auto';\n      body.appendChild(node); // select the text\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range); // attempt to copy\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {} // remove selection and node\n\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  }\n\n}"]},"metadata":{},"sourceType":"script"}
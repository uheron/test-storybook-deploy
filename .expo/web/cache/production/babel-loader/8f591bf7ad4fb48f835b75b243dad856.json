{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.ResponderTouchHistoryStore=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _ResponderEventTypes=require(\"./ResponderEventTypes\");var __DEV__=process.env.NODE_ENV!=='production';var MAX_TOUCH_BANK=20;function timestampForTouch(touch){return touch.timeStamp||touch.timestamp;}function createTouchRecord(touch){return{touchActive:true,startPageX:touch.pageX,startPageY:touch.pageY,startTimeStamp:timestampForTouch(touch),currentPageX:touch.pageX,currentPageY:touch.pageY,currentTimeStamp:timestampForTouch(touch),previousPageX:touch.pageX,previousPageY:touch.pageY,previousTimeStamp:timestampForTouch(touch)};}function resetTouchRecord(touchRecord,touch){touchRecord.touchActive=true;touchRecord.startPageX=touch.pageX;touchRecord.startPageY=touch.pageY;touchRecord.startTimeStamp=timestampForTouch(touch);touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchRecord.previousPageX=touch.pageX;touchRecord.previousPageY=touch.pageY;touchRecord.previousTimeStamp=timestampForTouch(touch);}function getTouchIdentifier(_ref){var identifier=_ref.identifier;if(identifier==null){console.error('Touch object is missing identifier.');}if(__DEV__){if(identifier>MAX_TOUCH_BANK){console.error('Touch identifier %s is greater than maximum supported %s which causes '+'performance issues backfilling array locations for all of the indices.',identifier,MAX_TOUCH_BANK);}}return identifier;}function recordTouchStart(touch,touchHistory){var identifier=getTouchIdentifier(touch);var touchRecord=touchHistory.touchBank[identifier];if(touchRecord){resetTouchRecord(touchRecord,touch);}else{touchHistory.touchBank[identifier]=createTouchRecord(touch);}touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}function recordTouchMove(touch,touchHistory){var touchRecord=touchHistory.touchBank[getTouchIdentifier(touch)];if(touchRecord){touchRecord.touchActive=true;touchRecord.previousPageX=touchRecord.currentPageX;touchRecord.previousPageY=touchRecord.currentPageY;touchRecord.previousTimeStamp=touchRecord.currentTimeStamp;touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}else{console.warn('Cannot record touch move without a touch start.\\n',\"Touch Move: \"+printTouch(touch)+\"\\n\",\"Touch Bank: \"+printTouchBank(touchHistory));}}function recordTouchEnd(touch,touchHistory){var touchRecord=touchHistory.touchBank[getTouchIdentifier(touch)];if(touchRecord){touchRecord.touchActive=false;touchRecord.previousPageX=touchRecord.currentPageX;touchRecord.previousPageY=touchRecord.currentPageY;touchRecord.previousTimeStamp=touchRecord.currentTimeStamp;touchRecord.currentPageX=touch.pageX;touchRecord.currentPageY=touch.pageY;touchRecord.currentTimeStamp=timestampForTouch(touch);touchHistory.mostRecentTimeStamp=timestampForTouch(touch);}else{console.warn('Cannot record touch end without a touch start.\\n',\"Touch End: \"+printTouch(touch)+\"\\n\",\"Touch Bank: \"+printTouchBank(touchHistory));}}function printTouch(touch){return JSON.stringify({identifier:touch.identifier,pageX:touch.pageX,pageY:touch.pageY,timestamp:timestampForTouch(touch)});}function printTouchBank(touchHistory){var touchBank=touchHistory.touchBank;var printed=JSON.stringify(touchBank.slice(0,MAX_TOUCH_BANK));if(touchBank.length>MAX_TOUCH_BANK){printed+=' (original size: '+touchBank.length+')';}return printed;}var ResponderTouchHistoryStore=function(){function ResponderTouchHistoryStore(){(0,_classCallCheck2.default)(this,ResponderTouchHistoryStore);this._touchHistory={touchBank:[],numberActiveTouches:0,indexOfSingleActiveTouch:-1,mostRecentTimeStamp:0};}(0,_createClass2.default)(ResponderTouchHistoryStore,[{key:\"recordTouchTrack\",value:function recordTouchTrack(topLevelType,nativeEvent){var touchHistory=this._touchHistory;if((0,_ResponderEventTypes.isMoveish)(topLevelType)){nativeEvent.changedTouches.forEach(function(touch){return recordTouchMove(touch,touchHistory);});}else if((0,_ResponderEventTypes.isStartish)(topLevelType)){nativeEvent.changedTouches.forEach(function(touch){return recordTouchStart(touch,touchHistory);});touchHistory.numberActiveTouches=nativeEvent.touches.length;if(touchHistory.numberActiveTouches===1){touchHistory.indexOfSingleActiveTouch=nativeEvent.touches[0].identifier;}}else if((0,_ResponderEventTypes.isEndish)(topLevelType)){nativeEvent.changedTouches.forEach(function(touch){return recordTouchEnd(touch,touchHistory);});touchHistory.numberActiveTouches=nativeEvent.touches.length;if(touchHistory.numberActiveTouches===1){var touchBank=touchHistory.touchBank;for(var i=0;i<touchBank.length;i++){var touchTrackToCheck=touchBank[i];if(touchTrackToCheck!=null&&touchTrackToCheck.touchActive){touchHistory.indexOfSingleActiveTouch=i;break;}}if(__DEV__){var activeRecord=touchBank[touchHistory.indexOfSingleActiveTouch];if(!(activeRecord!=null&&activeRecord.touchActive)){console.error('Cannot find single active touch.');}}}}}},{key:\"touchHistory\",get:function get(){return this._touchHistory;}}]);return ResponderTouchHistoryStore;}();exports.ResponderTouchHistoryStore=ResponderTouchHistoryStore;","map":{"version":3,"sources":["/Users/uheron/IH/storybookFinalTest/node_modules/react-native-web/dist/modules/useResponderEvents/ResponderTouchHistoryStore.js"],"names":["__DEV__","process","env","NODE_ENV","MAX_TOUCH_BANK","timestampForTouch","touch","timeStamp","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","console","error","recordTouchStart","touchHistory","touchBank","mostRecentTimeStamp","recordTouchMove","warn","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","slice","length","ResponderTouchHistoryStore","_touchHistory","numberActiveTouches","indexOfSingleActiveTouch","topLevelType","nativeEvent","changedTouches","forEach","touches","i","touchTrackToCheck","activeRecord"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { isStartish, isMoveish, isEndish } from './ResponderEventTypes';\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar MAX_TOUCH_BANK = 20;\n\nfunction timestampForTouch(touch) {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\".\n  return touch.timeStamp || touch.timestamp;\n}\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\n\n\nfunction createTouchRecord(touch) {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch)\n  };\n}\n\nfunction resetTouchRecord(touchRecord, touch) {\n  touchRecord.touchActive = true;\n  touchRecord.startPageX = touch.pageX;\n  touchRecord.startPageY = touch.pageY;\n  touchRecord.startTimeStamp = timestampForTouch(touch);\n  touchRecord.currentPageX = touch.pageX;\n  touchRecord.currentPageY = touch.pageY;\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\n  touchRecord.previousPageX = touch.pageX;\n  touchRecord.previousPageY = touch.pageY;\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\n}\n\nfunction getTouchIdentifier(_ref) {\n  var identifier = _ref.identifier;\n\n  if (identifier == null) {\n    console.error('Touch object is missing identifier.');\n  }\n\n  if (__DEV__) {\n    if (identifier > MAX_TOUCH_BANK) {\n      console.error('Touch identifier %s is greater than maximum supported %s which causes ' + 'performance issues backfilling array locations for all of the indices.', identifier, MAX_TOUCH_BANK);\n    }\n  }\n\n  return identifier;\n}\n\nfunction recordTouchStart(touch, touchHistory) {\n  var identifier = getTouchIdentifier(touch);\n  var touchRecord = touchHistory.touchBank[identifier];\n\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch);\n  } else {\n    touchHistory.touchBank[identifier] = createTouchRecord(touch);\n  }\n\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n}\n\nfunction recordTouchMove(touch, touchHistory) {\n  var touchRecord = touchHistory.touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = true;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    console.warn('Cannot record touch move without a touch start.\\n', \"Touch Move: \" + printTouch(touch) + \"\\n\", \"Touch Bank: \" + printTouchBank(touchHistory));\n  }\n}\n\nfunction recordTouchEnd(touch, touchHistory) {\n  var touchRecord = touchHistory.touchBank[getTouchIdentifier(touch)];\n\n  if (touchRecord) {\n    touchRecord.touchActive = false;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    console.warn('Cannot record touch end without a touch start.\\n', \"Touch End: \" + printTouch(touch) + \"\\n\", \"Touch Bank: \" + printTouchBank(touchHistory));\n  }\n}\n\nfunction printTouch(touch) {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch)\n  });\n}\n\nfunction printTouchBank(touchHistory) {\n  var touchBank = touchHistory.touchBank;\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += ' (original size: ' + touchBank.length + ')';\n  }\n\n  return printed;\n}\n\nexport class ResponderTouchHistoryStore {\n  constructor() {\n    this._touchHistory = {\n      touchBank: [],\n      //Array<TouchRecord>\n      numberActiveTouches: 0,\n      // If there is only one active touch, we remember its location. This prevents\n      // us having to loop through all of the touches all the time in the most\n      // common case.\n      indexOfSingleActiveTouch: -1,\n      mostRecentTimeStamp: 0\n    };\n  }\n\n  recordTouchTrack(topLevelType, nativeEvent) {\n    var touchHistory = this._touchHistory;\n\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(touch => recordTouchMove(touch, touchHistory));\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(touch => recordTouchStart(touch, touchHistory));\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(touch => recordTouchEnd(touch, touchHistory));\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n\n      if (touchHistory.numberActiveTouches === 1) {\n        var touchBank = touchHistory.touchBank;\n\n        for (var i = 0; i < touchBank.length; i++) {\n          var touchTrackToCheck = touchBank[i];\n\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n\n        if (__DEV__) {\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n\n          if (!(activeRecord != null && activeRecord.touchActive)) {\n            console.error('Cannot find single active touch.');\n          }\n        }\n      }\n    }\n  }\n\n  get touchHistory() {\n    return this._touchHistory;\n  }\n\n}"]},"metadata":{},"sourceType":"script"}
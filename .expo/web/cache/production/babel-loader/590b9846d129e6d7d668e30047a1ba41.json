{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.createSheet=createSheet;var _canUseDom=_interopRequireDefault(require(\"../../../modules/canUseDom\"));var _createCSSStyleSheet=_interopRequireDefault(require(\"./createCSSStyleSheet\"));var _createOrderedCSSStyleSheet=_interopRequireDefault(require(\"./createOrderedCSSStyleSheet\"));var defaultId='react-native-stylesheet';var roots=new WeakMap();var sheets=[];var initialRules=['html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}','body{margin:0;}','button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}','input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];function createSheet(root,id){if(id===void 0){id=defaultId;}var sheet;if(_canUseDom.default){var rootNode=root!=null?root.getRootNode():document;if(sheets.length===0){sheet=(0,_createOrderedCSSStyleSheet.default)((0,_createCSSStyleSheet.default)(id));initialRules.forEach(function(rule){sheet.insert(rule,0);});roots.set(rootNode,sheets.length);sheets.push(sheet);}else{var index=roots.get(rootNode);if(index==null){var initialSheet=sheets[0];var textContent=initialSheet!=null?initialSheet.getTextContent():'';sheet=(0,_createOrderedCSSStyleSheet.default)((0,_createCSSStyleSheet.default)(id,rootNode,textContent));roots.set(rootNode,sheets.length);sheets.push(sheet);}else{sheet=sheets[index];}}}else{if(sheets.length===0){sheet=(0,_createOrderedCSSStyleSheet.default)((0,_createCSSStyleSheet.default)(id));initialRules.forEach(function(rule){sheet.insert(rule,0);});sheets.push(sheet);}else{sheet=sheets[0];}}return{getTextContent:function getTextContent(){return sheet.getTextContent();},id:id,insert:function insert(cssText,groupValue){sheets.forEach(function(s){s.insert(cssText,groupValue);});}};}","map":{"version":3,"sources":["/Users/uheron/IH/storybookFinalTest/node_modules/react-native-web/dist/exports/StyleSheet/dom/index.js"],"names":["defaultId","roots","WeakMap","sheets","initialRules","createSheet","root","id","sheet","canUseDOM","rootNode","getRootNode","document","length","forEach","rule","insert","set","push","index","get","initialSheet","textContent","getTextContent","cssText","groupValue","s"],"mappings":"4KAQA,6EACA,kFACA,gGACA,GAAIA,CAAAA,SAAS,CAAG,yBAAhB,CACA,GAAIC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,OAAJ,EAAZ,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,YAAY,CAAG,CACnB,0GADmB,CACyF,iBADzF,CAEnB,uEAFmB,CAEsD,mKAFtD,CAAnB,CAGO,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2BC,EAA3B,CAA+B,CACpC,GAAIA,EAAE,GAAK,IAAK,EAAhB,CAAmB,CACjBA,EAAE,CAAGP,SAAL,CACD,CAED,GAAIQ,CAAAA,KAAJ,CAEA,GAAIC,kBAAJ,CAAe,CACb,GAAIC,CAAAA,QAAQ,CAAGJ,IAAI,EAAI,IAAR,CAAeA,IAAI,CAACK,WAAL,EAAf,CAAoCC,QAAnD,CAEA,GAAIT,MAAM,CAACU,MAAP,GAAkB,CAAtB,CAAyB,CACvBL,KAAK,CAAG,wCAA2B,iCAAoBD,EAApB,CAA3B,CAAR,CACAH,YAAY,CAACU,OAAb,CAAqB,SAAAC,IAAI,CAAI,CAC3BP,KAAK,CAACQ,MAAN,CAAaD,IAAb,CAAmB,CAAnB,EACD,CAFD,EAGAd,KAAK,CAACgB,GAAN,CAAUP,QAAV,CAAoBP,MAAM,CAACU,MAA3B,EACAV,MAAM,CAACe,IAAP,CAAYV,KAAZ,EACD,CAPD,IAOO,CACL,GAAIW,CAAAA,KAAK,CAAGlB,KAAK,CAACmB,GAAN,CAAUV,QAAV,CAAZ,CAEA,GAAIS,KAAK,EAAI,IAAb,CAAmB,CACjB,GAAIE,CAAAA,YAAY,CAAGlB,MAAM,CAAC,CAAD,CAAzB,CAEA,GAAImB,CAAAA,WAAW,CAAGD,YAAY,EAAI,IAAhB,CAAuBA,YAAY,CAACE,cAAb,EAAvB,CAAuD,EAAzE,CAEAf,KAAK,CAAG,wCAA2B,iCAAoBD,EAApB,CAAwBG,QAAxB,CAAkCY,WAAlC,CAA3B,CAAR,CACArB,KAAK,CAACgB,GAAN,CAAUP,QAAV,CAAoBP,MAAM,CAACU,MAA3B,EACAV,MAAM,CAACe,IAAP,CAAYV,KAAZ,EACD,CARD,IAQO,CACLA,KAAK,CAAGL,MAAM,CAACgB,KAAD,CAAd,CACD,CACF,CACF,CAzBD,IAyBO,CAEL,GAAIhB,MAAM,CAACU,MAAP,GAAkB,CAAtB,CAAyB,CACvBL,KAAK,CAAG,wCAA2B,iCAAoBD,EAApB,CAA3B,CAAR,CACAH,YAAY,CAACU,OAAb,CAAqB,SAAAC,IAAI,CAAI,CAC3BP,KAAK,CAACQ,MAAN,CAAaD,IAAb,CAAmB,CAAnB,EACD,CAFD,EAGAZ,MAAM,CAACe,IAAP,CAAYV,KAAZ,EACD,CAND,IAMO,CACLA,KAAK,CAAGL,MAAM,CAAC,CAAD,CAAd,CACD,CACF,CAED,MAAO,CACLoB,cADK,0BACY,CACf,MAAOf,CAAAA,KAAK,CAACe,cAAN,EAAP,CACD,CAHI,CAKLhB,EAAE,CAAFA,EALK,CAOLS,MAPK,iBAOEQ,OAPF,CAOWC,UAPX,CAOuB,CAC1BtB,MAAM,CAACW,OAAP,CAAe,SAAAY,CAAC,CAAI,CAClBA,CAAC,CAACV,MAAF,CAASQ,OAAT,CAAkBC,UAAlB,EACD,CAFD,EAGD,CAXI,CAAP,CAcD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport canUseDOM from '../../../modules/canUseDom';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nvar defaultId = 'react-native-stylesheet';\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = [// minimal top-level reset\n'html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', // minimal form pseudo-element reset\n'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\nexport function createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n\n  var sheet;\n\n  if (canUseDOM) {\n    var rootNode = root != null ? root.getRootNode() : document; // Create the initial style sheet\n\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n\n      if (index == null) {\n        var initialSheet = sheets[0]; // If we're creating a new sheet, populate it with existing styles\n\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : ''; // Cast rootNode to 'any' because Flow types for getRootNode are wrong\n\n        sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    // Create the initial style sheet\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(rule => {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n\n  return {\n    getTextContent() {\n      return sheet.getTextContent();\n    },\n\n    id,\n\n    insert(cssText, groupValue) {\n      sheets.forEach(s => {\n        s.insert(cssText, groupValue);\n      });\n    }\n\n  };\n}"]},"metadata":{},"sourceType":"script"}
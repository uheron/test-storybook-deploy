{"ast":null,"code":"'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _NativeAnimatedHelper=_interopRequireDefault(require(\"../NativeAnimatedHelper\"));var startNativeAnimationNextId=1;var Animation=function(){function Animation(){(0,_classCallCheck2.default)(this,Animation);}(0,_createClass2.default)(Animation,[{key:\"start\",value:function start(fromValue,onUpdate,onEnd,previousAnimation,animatedValue){}},{key:\"stop\",value:function stop(){if(this.__nativeId){_NativeAnimatedHelper.default.API.stopAnimation(this.__nativeId);}}},{key:\"__getNativeAnimationConfig\",value:function __getNativeAnimationConfig(){throw new Error('This animation type cannot be offloaded to native');}},{key:\"__debouncedOnEnd\",value:function __debouncedOnEnd(result){var onEnd=this.__onEnd;this.__onEnd=null;onEnd&&onEnd(result);}},{key:\"__startNativeAnimation\",value:function __startNativeAnimation(animatedValue){var startNativeAnimationWaitId=startNativeAnimationNextId+\":startAnimation\";startNativeAnimationNextId+=1;_NativeAnimatedHelper.default.API.setWaitingForIdentifier(startNativeAnimationWaitId);try{animatedValue.__makeNative();this.__nativeId=_NativeAnimatedHelper.default.generateNewAnimationId();_NativeAnimatedHelper.default.API.startAnimatingNode(this.__nativeId,animatedValue.__getNativeTag(),this.__getNativeAnimationConfig(),this.__debouncedOnEnd.bind(this));}catch(e){throw e;}finally{_NativeAnimatedHelper.default.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);}}}]);return Animation;}();var _default=Animation;exports.default=_default;","map":{"version":3,"sources":["/Users/uheron/IH/storybookFinalTest/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"names":["startNativeAnimationNextId","Animation","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__nativeId","NativeAnimatedHelper","API","stopAnimation","Error","result","__onEnd","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","__getNativeAnimationConfig","__debouncedOnEnd","bind","e","unsetWaitingForIdentifier"],"mappings":"AASA,a,yVAEA,qFACA,GAAIA,CAAAA,0BAA0B,CAAG,CAAjC,C,GAIMC,CAAAA,S,uIACJ,eAAMC,SAAN,CAAiBC,QAAjB,CAA2BC,KAA3B,CAAkCC,iBAAlC,CAAqDC,aAArD,CAAoE,CAAE,C,oBAEtE,eAAO,CACL,GAAI,KAAKC,UAAT,CAAqB,CACnBC,8BAAqBC,GAArB,CAAyBC,aAAzB,CAAuC,KAAKH,UAA5C,EACD,CACF,C,0CAED,qCAA6B,CAG3B,KAAM,IAAII,CAAAA,KAAJ,CAAU,mDAAV,CAAN,CACD,C,gCAGD,0BAAiBC,MAAjB,CAAyB,CACvB,GAAIR,CAAAA,KAAK,CAAG,KAAKS,OAAjB,CACA,KAAKA,OAAL,CAAe,IAAf,CACAT,KAAK,EAAIA,KAAK,CAACQ,MAAD,CAAd,CACD,C,sCAED,gCAAuBN,aAAvB,CAAsC,CACpC,GAAIQ,CAAAA,0BAA0B,CAAGd,0BAA0B,CAAG,iBAA9D,CACAA,0BAA0B,EAAI,CAA9B,CACAQ,8BAAqBC,GAArB,CAAyBM,uBAAzB,CAAiDD,0BAAjD,EAEA,GAAI,CACFR,aAAa,CAACU,YAAd,GAEA,KAAKT,UAAL,CAAkBC,8BAAqBS,sBAArB,EAAlB,CACAT,8BAAqBC,GAArB,CAAyBS,kBAAzB,CAA4C,KAAKX,UAAjD,CAA6DD,aAAa,CAACa,cAAd,EAA7D,CAA6F,KAAKC,0BAAL,EAA7F,CAAgI,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAhI,EACD,CAAC,MAAOC,CAAP,CAAU,CACV,KAAMA,CAAAA,CAAN,CACD,CAPD,OAOU,CACRf,8BAAqBC,GAArB,CAAyBe,yBAAzB,CAAmDV,0BAAnD,EACD,CACF,C,sCAIYb,S","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nclass Animation {\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n\n  stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  }\n\n  __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n\n\n  __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  }\n\n  __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  }\n\n}\n\nexport default Animation;"]},"metadata":{},"sourceType":"script"}
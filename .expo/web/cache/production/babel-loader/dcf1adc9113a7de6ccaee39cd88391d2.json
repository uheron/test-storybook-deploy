{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _Dimensions=_interopRequireDefault(require(\"../Dimensions\"));var PixelRatio=function(){function PixelRatio(){(0,_classCallCheck2.default)(this,PixelRatio);}(0,_createClass2.default)(PixelRatio,null,[{key:\"get\",value:function get(){return _Dimensions.default.get('window').scale;}},{key:\"getFontScale\",value:function getFontScale(){return _Dimensions.default.get('window').fontScale||PixelRatio.get();}},{key:\"getPixelSizeForLayoutSize\",value:function getPixelSizeForLayoutSize(layoutSize){return Math.round(layoutSize*PixelRatio.get());}},{key:\"roundToNearestPixel\",value:function roundToNearestPixel(layoutSize){var ratio=PixelRatio.get();return Math.round(layoutSize*ratio)/ratio;}}]);return PixelRatio;}();exports.default=PixelRatio;","map":{"version":3,"sources":["/Users/uheron/IH/storybookFinalTest/node_modules/react-native-web/dist/exports/PixelRatio/index.js"],"names":["PixelRatio","Dimensions","get","scale","fontScale","layoutSize","Math","round","ratio"],"mappings":"yVASA,iE,GAKqBA,CAAAA,U,6IAInB,cAAa,CACX,MAAOC,qBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAAhC,CACD,C,4BAMD,uBAAsB,CACpB,MAAOF,qBAAWC,GAAX,CAAe,QAAf,EAAyBE,SAAzB,EAAsCJ,UAAU,CAACE,GAAX,EAA7C,CACD,C,yCAOD,mCAAiCG,UAAjC,CAA6C,CAC3C,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,UAAU,CAAGL,UAAU,CAACE,GAAX,EAAxB,CAAP,CACD,C,mCASD,6BAA2BG,UAA3B,CAAuC,CACrC,GAAIG,CAAAA,KAAK,CAAGR,UAAU,CAACE,GAAX,EAAZ,CACA,MAAOI,CAAAA,IAAI,CAACC,KAAL,CAAWF,UAAU,CAAGG,KAAxB,EAAiCA,KAAxC,CACD,C","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport Dimensions from '../Dimensions';\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nexport default class PixelRatio {\n  /**\n   * Returns the device pixel density.\n   */\n  static get() {\n    return Dimensions.get('window').scale;\n  }\n  /**\n   * No equivalent for Web\n   */\n\n\n  static getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  }\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n\n\n  static getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n\n\n  static roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  }\n\n}"]},"metadata":{},"sourceType":"script"}
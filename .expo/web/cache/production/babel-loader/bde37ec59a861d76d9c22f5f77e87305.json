{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.isLocaleRTL=isLocaleRTL;var rtlScripts=new Set(['Arab','Syrc','Samr','Mand','Thaa','Mend','Nkoo','Adlm','Rohg','Hebr']);var rtlLangs=new Set(['ae','ar','arc','bcc','bqi','ckb','dv','fa','far','glk','he','iw','khw','ks','ku','mzn','nqo','pnb','ps','sd','ug','ur','yi']);var cache=new Map();function isLocaleRTL(locale){var cachedRTL=cache.get(locale);if(cachedRTL){return cachedRTL;}var isRTL=false;if(Intl.Locale){var script=new Intl.Locale(locale).maximize().script;isRTL=rtlScripts.has(script);}else{var lang=locale.split('-')[0];isRTL=rtlLangs.has(lang);}cache.set(locale,isRTL);return isRTL;}","map":{"version":3,"sources":["/Users/uheron/IH/storybookFinalTest/node_modules/react-native-web/dist/modules/useLocale/isLocaleRTL.js"],"names":["rtlScripts","Set","rtlLangs","cache","Map","isLocaleRTL","locale","cachedRTL","get","isRTL","Intl","Locale","script","maximize","has","lang","split","set"],"mappings":"yFAQA,GAAIA,CAAAA,UAAU,CAAG,GAAIC,CAAAA,GAAJ,CAAQ,CAAC,MAAD,CAAS,MAAT,CAAiB,MAAjB,CAAyB,MAAzB,CAAiC,MAAjC,CAAyC,MAAzC,CAAiD,MAAjD,CAAyD,MAAzD,CAAiE,MAAjE,CAAyE,MAAzE,CAAR,CAAjB,CACA,GAAIC,CAAAA,QAAQ,CAAG,GAAID,CAAAA,GAAJ,CAAQ,CAAC,IAAD,CACvB,IADuB,CAEvB,KAFuB,CAGvB,KAHuB,CAIvB,KAJuB,CAKvB,KALuB,CAMvB,IANuB,CAOvB,IAPuB,CAOjB,KAPiB,CAQvB,KARuB,CASvB,IATuB,CASjB,IATiB,CAUvB,KAVuB,CAWvB,IAXuB,CAYvB,IAZuB,CAavB,KAbuB,CAcvB,KAduB,CAevB,KAfuB,CAgBvB,IAhBuB,CAiBvB,IAjBuB,CAkBvB,IAlBuB,CAmBvB,IAnBuB,CAoBvB,IApBuB,CAAR,CAAf,CAsBA,GAAIE,CAAAA,KAAK,CAAG,GAAIC,CAAAA,GAAJ,EAAZ,CAKO,QAASC,CAAAA,WAAT,CAAqBC,MAArB,CAA6B,CAClC,GAAIC,CAAAA,SAAS,CAAGJ,KAAK,CAACK,GAAN,CAAUF,MAAV,CAAhB,CAEA,GAAIC,SAAJ,CAAe,CACb,MAAOA,CAAAA,SAAP,CACD,CAED,GAAIE,CAAAA,KAAK,CAAG,KAAZ,CAEA,GAAIC,IAAI,CAACC,MAAT,CAAiB,CAEf,GAAIC,CAAAA,MAAM,CAAG,GAAIF,CAAAA,IAAI,CAACC,MAAT,CAAgBL,MAAhB,EAAwBO,QAAxB,GAAmCD,MAAhD,CACAH,KAAK,CAAGT,UAAU,CAACc,GAAX,CAAeF,MAAf,CAAR,CACD,CAJD,IAIO,CAEL,GAAIG,CAAAA,IAAI,CAAGT,MAAM,CAACU,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAX,CACAP,KAAK,CAAGP,QAAQ,CAACY,GAAT,CAAaC,IAAb,CAAR,CACD,CAEDZ,KAAK,CAACc,GAAN,CAAUX,MAAV,CAAkBG,KAAlB,EACA,MAAOA,CAAAA,KAAP,CACD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae', // Avestan\n'ar', // Arabic\n'arc', // Aramaic\n'bcc', // Southern Balochi\n'bqi', // Bakthiari\n'ckb', // Sorani\n'dv', // Dhivehi\n'fa', 'far', // Persian\n'glk', // Gilaki\n'he', 'iw', // Hebrew\n'khw', // Khowar\n'ks', // Kashmiri\n'ku', // Kurdish\n'mzn', // Mazanderani\n'nqo', // N'Ko\n'pnb', // Western Punjabi\n'ps', // Pashto\n'sd', // Sindhi\n'ug', // Uyghur\n'ur', // Urdu\n'yi' // Yiddish\n]);\nvar cache = new Map();\n/**\n * Determine the writing direction of a locale\n */\n\nexport function isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n\n  var isRTL = false; // $FlowFixMe\n\n  if (Intl.Locale) {\n    // $FlowFixMe\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    // Fallback to inferring from language\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n\n  cache.set(locale, isRTL);\n  return isRTL;\n}"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _reactNative=require(\"react-native\");var _reactNativeModal=_interopRequireDefault(require(\"react-native-modal\"));var _utils=require(\"./utils\");var _jsxRuntime=require(\"react/jsx-runtime\");var _excluded=[\"cancelTextIOS\",\"cancelTextStyle\",\"confirmTextIOS\",\"confirmTextStyle\",\"contentContainerStyleIOS\",\"cancelButtonContainerStyleIOS\",\"customCancelButtonIOS\",\"customConfirmButtonIOS\",\"customConfirmButtonWhileInteractingIOS\",\"customDatePickerIOS\",\"customTitleContainerIOS\",\"datePickerContainerStyleIOS\",\"dismissOnBackdropPressIOS\",\"hideTitleContainerIOS\",\"isDarkModeEnabled\",\"isVisible\",\"minuteInterval\",\"mode\",\"neverDisableConfirmIOS\",\"pickerRefCb\",\"reactNativeModalPropsIOS\",\"titleIOS\",\"titleStyle\"];function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var CustomDatePickerIOS=function(_React$PureComponent){(0,_inherits2.default)(CustomDatePickerIOS,_React$PureComponent);var _super=_createSuper(CustomDatePickerIOS);function CustomDatePickerIOS(){var _this;(0,_classCallCheck2.default)(this,CustomDatePickerIOS);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={date:_this.props.date,userIsInteractingWithPicker:false,minuteInterval:_this.props.minuteInterval||1};_this.handleCancel=function(){_this.confirmed=false;_this.props.onCancel();_this.resetDate();};_this.handleConfirm=function(){_this.confirmed=true;_this.props.onConfirm(_this.state.date);_this.resetDate();};_this.resetDate=function(){_this.setState({date:_this.props.date});};_this.handleModalShow=function(){_this.setState({minuteInterval:_this.props.minuteInterval});};_this.handleModalHide=function(){if(_this.confirmed){_this.props.onHideAfterConfirm(_this.state.date);}};_this.handleDateChange=function(date){_this.setState({date:date,userIsInteractingWithPicker:false});_this.props.onDateChange(date);};_this.handleUserTouchInit=function(){if(!_this.props.customDatePickerIOS){_this.setState({userIsInteractingWithPicker:true});}return false;};return _this;}(0,_createClass2.default)(CustomDatePickerIOS,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(this.props.date.valueOf()!==nextProps.date.valueOf()){this.setState({date:nextProps.date});}}},{key:\"render\",value:function render(){var _this$props=this.props,cancelTextIOS=_this$props.cancelTextIOS,cancelTextStyle=_this$props.cancelTextStyle,confirmTextIOS=_this$props.confirmTextIOS,confirmTextStyle=_this$props.confirmTextStyle,contentContainerStyleIOS=_this$props.contentContainerStyleIOS,cancelButtonContainerStyleIOS=_this$props.cancelButtonContainerStyleIOS,customCancelButtonIOS=_this$props.customCancelButtonIOS,customConfirmButtonIOS=_this$props.customConfirmButtonIOS,customConfirmButtonWhileInteractingIOS=_this$props.customConfirmButtonWhileInteractingIOS,customDatePickerIOS=_this$props.customDatePickerIOS,customTitleContainerIOS=_this$props.customTitleContainerIOS,datePickerContainerStyleIOS=_this$props.datePickerContainerStyleIOS,dismissOnBackdropPressIOS=_this$props.dismissOnBackdropPressIOS,hideTitleContainerIOS=_this$props.hideTitleContainerIOS,isDarkModeEnabled=_this$props.isDarkModeEnabled,isVisible=_this$props.isVisible,minuteInterval=_this$props.minuteInterval,mode=_this$props.mode,neverDisableConfirmIOS=_this$props.neverDisableConfirmIOS,pickerRefCb=_this$props.pickerRefCb,reactNativeModalPropsIOS=_this$props.reactNativeModalPropsIOS,titleIOS=_this$props.titleIOS,titleStyle=_this$props.titleStyle,otherProps=(0,_objectWithoutProperties2.default)(_this$props,_excluded);var titleContainer=(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.titleContainer,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:[styles.title,titleStyle],children:titleIOS})});var confirmButton;if(customConfirmButtonIOS){if(customConfirmButtonWhileInteractingIOS&&this.state.userIsInteractingWithPicker){confirmButton=customConfirmButtonWhileInteractingIOS;}else{confirmButton=customConfirmButtonIOS;}}else{confirmButton=(0,_jsxRuntime.jsx)(_reactNative.Text,{style:[styles.confirmText,confirmTextStyle],children:confirmTextIOS});}var cancelButton=(0,_jsxRuntime.jsx)(_reactNative.Text,{style:[styles.cancelText,cancelTextStyle],children:cancelTextIOS});var DatePickerComponent=customDatePickerIOS||_reactNative.DatePickerIOS;var reactNativeModalProps=Object.assign({onBackdropPress:dismissOnBackdropPressIOS?this.handleCancel:function(){return null;}},reactNativeModalPropsIOS);var backgroundColor=isDarkModeEnabled?BACKGROUND_COLOR_DARK:BACKGROUND_COLOR_LIGHT;return(0,_jsxRuntime.jsxs)(_reactNativeModal.default,Object.assign({isVisible:isVisible,style:[styles.contentContainer,contentContainerStyleIOS],onModalHide:this.handleModalHide,onModalShow:this.handleModalShow,backdropOpacity:0.4},reactNativeModalProps,{children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:[styles.datepickerContainer,{backgroundColor:backgroundColor},datePickerContainerStyleIOS],children:[!hideTitleContainerIOS&&(customTitleContainerIOS||titleContainer),(0,_jsxRuntime.jsx)(_reactNative.View,{onStartShouldSetResponderCapture:neverDisableConfirmIOS!==true?this.handleUserTouchInit:null,children:(0,_jsxRuntime.jsx)(DatePickerComponent,Object.assign({ref:pickerRefCb,mode:mode,minuteInterval:this.state.minuteInterval},otherProps,{date:this.state.date,onDateChange:this.handleDateChange}))}),(0,_jsxRuntime.jsx)(_reactNative.TouchableHighlight,{style:styles.confirmButton,underlayColor:HIGHLIGHT_COLOR,onPress:this.handleConfirm,disabled:!neverDisableConfirmIOS&&this.state.userIsInteractingWithPicker,children:confirmButton})]}),(0,_jsxRuntime.jsx)(_reactNative.TouchableHighlight,{style:[styles.cancelButton,{backgroundColor:backgroundColor},cancelButtonContainerStyleIOS],underlayColor:HIGHLIGHT_COLOR,onPress:this.handleCancel,children:customCancelButtonIOS||cancelButton})]}));}}]);return CustomDatePickerIOS;}(_react.default.PureComponent);exports.default=CustomDatePickerIOS;CustomDatePickerIOS.propTypes={cancelTextIOS:_propTypes.default.string,cancelTextStyle:_propTypes.default.any,confirmTextIOS:_propTypes.default.string,confirmTextStyle:_propTypes.default.any,contentContainerStyleIOS:_propTypes.default.any,cancelButtonContainerStyleIOS:_propTypes.default.any,customCancelButtonIOS:_propTypes.default.node,customConfirmButtonIOS:_propTypes.default.node,customConfirmButtonWhileInteractingIOS:_propTypes.default.node,customDatePickerIOS:_propTypes.default.oneOfType([_propTypes.default.node,_propTypes.default.func]),customTitleContainerIOS:_propTypes.default.node,dismissOnBackdropPressIOS:_propTypes.default.bool,hideTitleContainerIOS:_propTypes.default.bool,isDarkModeEnabled:_propTypes.default.bool,isVisible:_propTypes.default.bool,date:_propTypes.default.instanceOf(Date),datePickerContainerStyleIOS:_propTypes.default.any,mode:_propTypes.default.oneOf([\"date\",\"time\",\"datetime\"]),neverDisableConfirmIOS:_propTypes.default.bool,onCancel:_propTypes.default.func.isRequired,onConfirm:_propTypes.default.func.isRequired,onDateChange:_propTypes.default.func,onHideAfterConfirm:_propTypes.default.func,pickerRefCb:_propTypes.default.func,reactNativeModalPropsIOS:_propTypes.default.any,titleIOS:_propTypes.default.string,titleStyle:_propTypes.default.any};CustomDatePickerIOS.defaultProps={cancelTextIOS:\"Cancel\",confirmTextIOS:\"Confirm\",date:new Date(),dismissOnBackdropPressIOS:true,hideTitleContainerIOS:false,isDarkModeEnabled:false,isVisible:false,mode:\"date\",neverDisableConfirmIOS:false,onHideAfterConfirm:function onHideAfterConfirm(){},onDateChange:function onDateChange(){},reactNativeModalPropsIOS:{},titleIOS:\"Pick a date\"};var BORDER_RADIUS=13;var BACKGROUND_COLOR_LIGHT=\"white\";var BACKGROUND_COLOR_DARK=\"#0E0E0E\";var BORDER_COLOR=\"#d5d5d5\";var TITLE_FONT_SIZE=13;var TITLE_COLOR=\"#8f8f8f\";var BUTTON_FONT_WEIGHT=\"normal\";var BUTTON_FONT_COLOR=\"#007ff9\";var BUTTON_FONT_SIZE=20;var HIGHLIGHT_COLOR=\"#ebebeb\";var styles=_reactNative.StyleSheet.create({contentContainer:{justifyContent:\"flex-end\",margin:10},datepickerContainer:{borderRadius:BORDER_RADIUS,marginBottom:8,overflow:\"hidden\"},titleContainer:{borderBottomColor:BORDER_COLOR,borderBottomWidth:_reactNative.StyleSheet.hairlineWidth,padding:14,backgroundColor:\"transparent\"},title:{textAlign:\"center\",color:TITLE_COLOR,fontSize:TITLE_FONT_SIZE},confirmButton:{borderColor:BORDER_COLOR,borderTopWidth:_reactNative.StyleSheet.hairlineWidth,backgroundColor:\"transparent\",height:57,justifyContent:\"center\"},confirmText:{textAlign:\"center\",color:BUTTON_FONT_COLOR,fontSize:BUTTON_FONT_SIZE,fontWeight:BUTTON_FONT_WEIGHT,backgroundColor:\"transparent\"},cancelButton:{borderRadius:BORDER_RADIUS,height:57,marginBottom:(0,_utils.isIphoneX)()?20:0,justifyContent:\"center\"},cancelText:{padding:10,textAlign:\"center\",color:BUTTON_FONT_COLOR,fontSize:BUTTON_FONT_SIZE,fontWeight:\"600\",backgroundColor:\"transparent\"}});","map":{"version":3,"sources":["/Users/uheron/IH/storybookFinalTest/node_modules/react-native-modal-datetime-picker/src/CustomDatePickerIOS.js"],"names":["CustomDatePickerIOS","state","date","props","userIsInteractingWithPicker","minuteInterval","handleCancel","confirmed","onCancel","resetDate","handleConfirm","onConfirm","setState","handleModalShow","handleModalHide","onHideAfterConfirm","handleDateChange","onDateChange","handleUserTouchInit","customDatePickerIOS","nextProps","valueOf","cancelTextIOS","cancelTextStyle","confirmTextIOS","confirmTextStyle","contentContainerStyleIOS","cancelButtonContainerStyleIOS","customCancelButtonIOS","customConfirmButtonIOS","customConfirmButtonWhileInteractingIOS","customTitleContainerIOS","datePickerContainerStyleIOS","dismissOnBackdropPressIOS","hideTitleContainerIOS","isDarkModeEnabled","isVisible","mode","neverDisableConfirmIOS","pickerRefCb","reactNativeModalPropsIOS","titleIOS","titleStyle","otherProps","titleContainer","styles","title","confirmButton","confirmText","cancelButton","cancelText","DatePickerComponent","DatePickerIOS","reactNativeModalProps","onBackdropPress","backgroundColor","BACKGROUND_COLOR_DARK","BACKGROUND_COLOR_LIGHT","contentContainer","datepickerContainer","HIGHLIGHT_COLOR","React","PureComponent","propTypes","PropTypes","string","any","node","oneOfType","func","bool","instanceOf","Date","oneOf","isRequired","defaultProps","BORDER_RADIUS","BORDER_COLOR","TITLE_FONT_SIZE","TITLE_COLOR","BUTTON_FONT_WEIGHT","BUTTON_FONT_COLOR","BUTTON_FONT_SIZE","StyleSheet","create","justifyContent","margin","borderRadius","marginBottom","overflow","borderBottomColor","borderBottomWidth","hairlineWidth","padding","textAlign","color","fontSize","borderColor","borderTopWidth","height","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  DatePickerIOS,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  View\n} from \"react-native\";\nimport ReactNativeModal from \"react-native-modal\";\nimport { isIphoneX } from \"./utils\";\n\nexport default class CustomDatePickerIOS extends React.PureComponent {\n  static propTypes = {\n    cancelTextIOS: PropTypes.string,\n    cancelTextStyle: PropTypes.any,\n    confirmTextIOS: PropTypes.string,\n    confirmTextStyle: PropTypes.any,\n    contentContainerStyleIOS: PropTypes.any,\n    cancelButtonContainerStyleIOS: PropTypes.any,\n    customCancelButtonIOS: PropTypes.node,\n    customConfirmButtonIOS: PropTypes.node,\n    customConfirmButtonWhileInteractingIOS: PropTypes.node,\n    customDatePickerIOS: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    customTitleContainerIOS: PropTypes.node,\n    dismissOnBackdropPressIOS: PropTypes.bool,\n    hideTitleContainerIOS: PropTypes.bool,\n    isDarkModeEnabled: PropTypes.bool,\n    isVisible: PropTypes.bool,\n    date: PropTypes.instanceOf(Date),\n    datePickerContainerStyleIOS: PropTypes.any,\n    mode: PropTypes.oneOf([\"date\", \"time\", \"datetime\"]),\n    neverDisableConfirmIOS: PropTypes.bool,\n    onCancel: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    onDateChange: PropTypes.func,\n    onHideAfterConfirm: PropTypes.func,\n    pickerRefCb: PropTypes.func,\n    reactNativeModalPropsIOS: PropTypes.any,\n    titleIOS: PropTypes.string,\n    titleStyle: PropTypes.any\n  };\n\n  static defaultProps = {\n    cancelTextIOS: \"Cancel\",\n    confirmTextIOS: \"Confirm\",\n    date: new Date(),\n    dismissOnBackdropPressIOS: true,\n    hideTitleContainerIOS: false,\n    isDarkModeEnabled: false,\n    isVisible: false,\n    mode: \"date\",\n    neverDisableConfirmIOS: false,\n    onHideAfterConfirm: () => {},\n    onDateChange: () => {},\n    reactNativeModalPropsIOS: {},\n    titleIOS: \"Pick a date\"\n  };\n\n  state = {\n    date: this.props.date,\n    userIsInteractingWithPicker: false,\n    minuteInterval: this.props.minuteInterval || 1\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.date.valueOf() !== nextProps.date.valueOf()) {\n      this.setState({\n        date: nextProps.date\n      });\n    }\n  }\n\n  handleCancel = () => {\n    this.confirmed = false;\n    this.props.onCancel();\n    this.resetDate();\n  };\n\n  handleConfirm = () => {\n    this.confirmed = true;\n    this.props.onConfirm(this.state.date);\n    this.resetDate();\n  };\n\n  resetDate = () => {\n    this.setState({\n      date: this.props.date\n    });\n  };\n\n  handleModalShow = () => {\n    this.setState({ minuteInterval: this.props.minuteInterval });\n  };\n\n  handleModalHide = () => {\n    if (this.confirmed) {\n      this.props.onHideAfterConfirm(this.state.date);\n    }\n  };\n\n  handleDateChange = date => {\n    this.setState({\n      date,\n      userIsInteractingWithPicker: false\n    });\n    this.props.onDateChange(date);\n  };\n\n  handleUserTouchInit = () => {\n    // custom date picker shouldn't change this param\n    if (!this.props.customDatePickerIOS) {\n      this.setState({\n        userIsInteractingWithPicker: true\n      });\n    }\n    return false;\n  };\n\n  render() {\n    const {\n      cancelTextIOS,\n      cancelTextStyle,\n      confirmTextIOS,\n      confirmTextStyle,\n      contentContainerStyleIOS,\n      cancelButtonContainerStyleIOS,\n      customCancelButtonIOS,\n      customConfirmButtonIOS,\n      customConfirmButtonWhileInteractingIOS,\n      customDatePickerIOS,\n      customTitleContainerIOS,\n      datePickerContainerStyleIOS,\n      dismissOnBackdropPressIOS,\n      hideTitleContainerIOS,\n      isDarkModeEnabled,\n      isVisible,\n      minuteInterval,\n      mode,\n      neverDisableConfirmIOS,\n      pickerRefCb,\n      reactNativeModalPropsIOS,\n      titleIOS,\n      titleStyle,\n      ...otherProps\n    } = this.props;\n\n    const titleContainer = (\n      <View style={styles.titleContainer}>\n        <Text style={[styles.title, titleStyle]}>{titleIOS}</Text>\n      </View>\n    );\n    let confirmButton;\n\n    // Interested PR: https://github.com/mmazzarolo/react-native-modal-datetime-picker/pull/40\n    // Issue on React-Native: https://github.com/facebook/react-native/issues/8169\n    // Up until now when the user interacted with the picker, if he tapped on the confirm button,\n    // the state was not yet changed and thus the picked value would be old and miss-leading.\n    // DatePickerIOS does not update on the fly, and before it even manages to dispatch an update,\n    // our component is unmounted and thus the state is lost.\n    // We no longer allow our user to tap the confirm button unless the picker is still.\n    // They can always tap the cancel button anyway.\n    if (customConfirmButtonIOS) {\n      if (\n        customConfirmButtonWhileInteractingIOS &&\n        this.state.userIsInteractingWithPicker\n      ) {\n        confirmButton = customConfirmButtonWhileInteractingIOS;\n      } else {\n        confirmButton = customConfirmButtonIOS;\n      }\n    } else {\n      confirmButton = (\n        <Text style={[styles.confirmText, confirmTextStyle]}>\n          {confirmTextIOS}\n        </Text>\n      );\n    }\n    const cancelButton = (\n      <Text style={[styles.cancelText, cancelTextStyle]}>{cancelTextIOS}</Text>\n    );\n    const DatePickerComponent = customDatePickerIOS || DatePickerIOS;\n\n    const reactNativeModalProps = {\n      onBackdropPress: dismissOnBackdropPressIOS\n        ? this.handleCancel\n        : () => null,\n      ...reactNativeModalPropsIOS\n    };\n\n    const backgroundColor = isDarkModeEnabled ? BACKGROUND_COLOR_DARK : BACKGROUND_COLOR_LIGHT;\n\n    return (\n      <ReactNativeModal\n        isVisible={isVisible}\n        style={[styles.contentContainer, contentContainerStyleIOS]}\n        onModalHide={this.handleModalHide}\n        onModalShow={this.handleModalShow}\n        backdropOpacity={0.4}\n        {...reactNativeModalProps}\n      >\n        <View style={[styles.datepickerContainer, { backgroundColor }, datePickerContainerStyleIOS]}>\n          {!hideTitleContainerIOS &&\n            (customTitleContainerIOS || titleContainer)}\n          <View\n            onStartShouldSetResponderCapture={\n              neverDisableConfirmIOS !== true ? this.handleUserTouchInit : null\n            }\n          >\n            <DatePickerComponent\n              ref={pickerRefCb}\n              mode={mode}\n              minuteInterval={this.state.minuteInterval}\n              {...otherProps}\n              date={this.state.date}\n              onDateChange={this.handleDateChange}\n            />\n          </View>\n          <TouchableHighlight\n            style={styles.confirmButton}\n            underlayColor={HIGHLIGHT_COLOR}\n            onPress={this.handleConfirm}\n            disabled={\n              !neverDisableConfirmIOS && this.state.userIsInteractingWithPicker\n            }\n          >\n            {confirmButton}\n          </TouchableHighlight>\n        </View>\n\n        <TouchableHighlight\n          style={[styles.cancelButton, { backgroundColor }, cancelButtonContainerStyleIOS]}\n          underlayColor={HIGHLIGHT_COLOR}\n          onPress={this.handleCancel}\n        >\n          {customCancelButtonIOS || cancelButton}\n        </TouchableHighlight>\n      </ReactNativeModal>\n    );\n  }\n}\n\nconst BORDER_RADIUS = 13;\nconst BACKGROUND_COLOR_LIGHT = \"white\";\nconst BACKGROUND_COLOR_DARK = \"#0E0E0E\";\nconst BORDER_COLOR = \"#d5d5d5\";\nconst TITLE_FONT_SIZE = 13;\nconst TITLE_COLOR = \"#8f8f8f\";\nconst BUTTON_FONT_WEIGHT = \"normal\";\nconst BUTTON_FONT_COLOR = \"#007ff9\";\nconst BUTTON_FONT_SIZE = 20;\nconst HIGHLIGHT_COLOR = \"#ebebeb\";\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    justifyContent: \"flex-end\",\n    margin: 10\n  },\n  datepickerContainer: {\n    borderRadius: BORDER_RADIUS,\n    marginBottom: 8,\n    overflow: \"hidden\"\n  },\n  titleContainer: {\n    borderBottomColor: BORDER_COLOR,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    padding: 14,\n    backgroundColor: \"transparent\"\n  },\n  title: {\n    textAlign: \"center\",\n    color: TITLE_COLOR,\n    fontSize: TITLE_FONT_SIZE\n  },\n  confirmButton: {\n    borderColor: BORDER_COLOR,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    backgroundColor: \"transparent\",\n    height: 57,\n    justifyContent: \"center\"\n  },\n  confirmText: {\n    textAlign: \"center\",\n    color: BUTTON_FONT_COLOR,\n    fontSize: BUTTON_FONT_SIZE,\n    fontWeight: BUTTON_FONT_WEIGHT,\n    backgroundColor: \"transparent\"\n  },\n  cancelButton: {\n    borderRadius: BORDER_RADIUS,\n    height: 57,\n    marginBottom: isIphoneX() ? 20 : 0,\n    justifyContent: \"center\"\n  },\n  cancelText: {\n    padding: 10,\n    textAlign: \"center\",\n    color: BUTTON_FONT_COLOR,\n    fontSize: BUTTON_FONT_SIZE,\n    fontWeight: \"600\",\n    backgroundColor: \"transparent\"\n  }\n});\n"]},"metadata":{},"sourceType":"script"}